name: Build

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  build:
    name: ${{ matrix.name }}-${{ matrix.buildType }}-${{ matrix.linkage }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        linkage: [Dynamic, Static]
        buildType: [Release, Debug]
        os: [ubuntu-latest, windows-latest]
        include:
          # Common variables
          - vcpkgCommitId: 253704407ae68efa37bf8f5b59b3e06dd40d3d3f
          # OS variables
          - os: windows-latest
            name: windows
            vcpkgPath: C:/vcpkg
            vcpkgTriplet: x64-windows
          - os: ubuntu-latest
            name: ubuntu
            vcpkgPath: /usr/local/share/vcpkg
            vcpkgTriplet: x64-linux
          # Build type variables
          - buildType: Release
          - buildType: Debug
          # Linkage variables
          - linkage: Dynamic
            cmakeParameters: --dynamic
          - linkage: Static
            cmakeParameters: --static

    env:
      VCPKG_PATH: ${{ matrix.vcpkgPath }}

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - uses: lukka/get-cmake@latest

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgDirectory: ${{ github.workspace }}/vcpkg
        vcpkgGitCommitId: ${{ matrix.vcpkgCommitId }}

    - name: Install dependencies
      run: vcpkg install --triplet=${{ matrix.vcpkgTriplet }} yaml-cpp

    - name: Configure CMake
      run: python3 ${{ github.workspace }}/scripts/cmake.py -b ${{ matrix.buildType }} ${{ matrix.cmakeParameters }}

    - name: Build
      run: python3 ${{ github.workspace }}/scripts/build.py -b ${{ matrix.buildType }}

    - name: Run unit tests
      run: python3 ${{ github.workspace }}/scripts/runTests.py -b ${{ matrix.buildType }}

    - name: Release
      run: python3 ${{ github.workspace }}/scripts/release.py -b ${{ matrix.buildType }}

    - name: Archive artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-${{ matrix.buildType }}-${{ matrix.linkage }}-artifacts
        path: ${{ github.workspace }}/build/release/
